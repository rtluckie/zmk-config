/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 21>;
        };

        return {
            bindings = <&kp RETURN>;
            key-positions = <32 33>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };

        NM_Layer {
            bindings = <&to 1>;
            key-positions = <40 41>;
        };

        leftshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        rightshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <34 33>;
        };
    };

    behaviors {
        A_hold_Z: A_hold_Z {
            compatible = "zmk,behavior-hold-tap";
            label = "A_HOLD_Z";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        B_hold_V: B_hold_V {
            compatible = "zmk,behavior-hold-tap";
            label = "B_HOLD_V";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        S_hold_X: S_hold_X {
            compatible = "zmk,behavior-hold-tap";
            label = "S_HOLD_X";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        L_SPACE_HOLD_CMD: L_SPACE_HOLD_CMD {
            compatible = "zmk,behavior-hold-tap";
            label = "L_SPACE_HOLD_CMD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <800>;
            flavor = "tap-preferred";
        };

        R_SPACE_HOLD_ALT: R_SPACE_HOLD_ALT {
            compatible = "zmk,behavior-hold-tap";
            label = "R_SPACE_HOLD_ALT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <800>;
            flavor = "tap-preferred";
        };

        hold_L1: hold_L1 {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_L1";
            bindings = <&lt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <800>;
            flavor = "tap-preferred";
        };

        K_hold_Comma: K_hold_Comma {
            compatible = "zmk,behavior-hold-tap";
            label = "K_HOLD_COMMA";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        L_hold_Question: L_hold_Question {
            compatible = "zmk,behavior-hold-tap";
            label = "L_HOLD_QUESTION";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        P_hold_shift: P_hold_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "P_HOLD_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        Q_hold_shift: Q_hold_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "Q_HOLD_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none                       &none          &none          &none  &none          &none                                   &none                              &none  &none                  &none                        &none     &none
&Q_hold_shift LEFT_SHIFT Q  &none          &kp W          &kp E  &kp R          &kp T                                   &kp Y                              &kp U  &kp I                  &kp O                        &none     &P_hold_shift RIGHT_SHIFT P
&none                       &A_hold_Z Z A  &S_hold_X X S  &kp D  &kp F          &kp G                                   &kp H                              &kp J  &K_hold_Comma COMMA K  &L_hold_Question QUESTION L  &kp APOS  &none
                                                          &kp C  &B_hold_V V B  &L_SPACE_HOLD_CMD LEFT_COMMAND SPACE    &R_SPACE_HOLD_ALT RIGHT_ALT SPACE  &kp N  &kp M
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5       &kp N6     &kp N7          &kp N8          &kp N9       &kp N0  &none
&bt BT_CLR  &none         &none         &none         &none         &none        &none      &kp LEFT_ARROW  &kp UP          &kp RIGHT    &none   &none
&none       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans       &trans     &trans          &kp DOWN_ARROW  &bootloader  &trans  &trans
                                        &none         &trans        &kp SPACE    &kp SPACE  &trans          &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
