/*                KEY POSITIONS
26 keys:
        ╭────────────────╮ ╭────────────────╮          ╭─────────────────╮ ╭────────────────╮    
    ╭───╯  0   1   2   3 │ │  4   5   6   7 ╰───╮  ╭───╯ LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3╰────╮
    │  8   9  10  11  12 │ │ 13  14  15  16  17 │  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
    ╰───╮ 18  19  20     │ │     21  22  23 ╭───╯  ╰───╮ LB3 LB2 LB1     │ │     RB1 RB2 RB3 ╭───╯
        ╰───────────╮ 24 │ │ 25 ╭───────────╯          ╰───────────╮ LH0 │ │ RH0 ╭───────────╯
                    ╰────╯ ╰────╯                                  ╰─────╯ ╰─────╯
30 keys:
    ╭────────────────────╮ ╭────────────────────╮  ╭─────────────────────╮ ╭─────────────────────╮
    │  0   1   2   3   4 │ │  5   6   7   8   9 │  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
    │ 10  11  12  13  14 │ │ 15  16  17  18  19 │  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
    ╰───╮ 20  21  22     │ │     23  24  25 ╭───╯  ╰───╮ LB3 LB2 LB1     │ │     RB1 RB2 RB3 ╭───╯
        ╰───────╮ 26  27 │ │ 28  29 ╭───────╯          ╰───────╮ LH1 LH0 │ │ RH0 RH1 ╭───────╯
                ╰────────╯ ╰────────╯                          ╰─────────╯ ╰─────────╯
34 keys:
    ╭────────────────────╮ ╭────────────────────╮  ╭─────────────────────╮ ╭─────────────────────╮
    │  0   1   2   3   4 │ │  5   6   7   8   9 │  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
    │ 10  11  12  13  14 │ │ 15  16  17  18  19 │  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
    │ 20  21  22  23  24 │ │ 25  26  27  28  29 │  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
    ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯  ╰───────────╮ LH1 LH0 │ │ RH0 RH1 ╭───────────╯
                ╰────────╯ ╰────────╯                          ╰─────────╯ ╰─────────╯

42 keys:
    ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
    │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
    │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
    │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
    ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
                ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯            
*/
 

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TIMEOUT, RPI, ...) \
    combo_##NAME {                                               \
        timeout-ms = <TIMEOUT>;                                  \
        bindings = <BINDINGS>;                                   \
        key-positions = <KEYPOS>;                                \
        layers = <LAYERS>;                                       \
        require-prior-idle-ms = <RPI>;                           \
        __VA_ARGS__                                              \
    };



#define COMBO_TERM_FAST 30
#define COMBO_TERM_MID  45
#define COMBO_TERM_SLOW 65

#define COMBO_RPI_SLOW 200
#define COMBO_RPI_MID 100
#define COMBO_RPI_FAST 50

#define ALL_LAYERS DEF NAV NUM FUN MSE MSE_F SHRT0 SHRT1 ACT0 ACT1
/ {
    combos {
        compatible = "zmk,combos";

#if defined(KEYS_34) || defined(KEYS_42)
        COMBO(cb_to_def,    &to DEF,   LT1 LT2 LT3,  ALL_LAYERS,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_prcnt,     &kp PRCNT,   LT0 LM0,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_grave,     &kp GRAVE,   LM3 LB3,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_tilde,     &kp TILDE,   LB0 LM0,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)

        COMBO(cb_caret,     &kp CARET,   RT0 RM0,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        // COMBO(cb_qt_grv,    &qt_grv,     LM3 LB3,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_under,     &kp UNDER,   RM0 RB0,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_FAST)

#else
        COMBO(cb_prcnt,     &kp PRCNT,   LT1 LT0,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        // COMBO(cb_grave,     &kp TILDE,   LB1 LM0,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)

        COMBO(cb_caret,     &kp CARET,   RT0 RT1,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        // COMBO(cb_qt_grv,    &qt_grv,     RB1 RM0,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
#endif

        COMBO(cb_dllr,      &kp DLLR,    LT1 LM1,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_hash,      &kp HASH,    LT2 LM2,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_at,        &kp AT,      LT3 LM3,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_equal,     &kp EQUAL,   LM1 LB1,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_bslh,      &kp BSLH,    LM2 LB2,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        // COMBO(cb_euro,      &kp EURO,    LM3 LB3,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)

        COMBO(cb_bspc,      &kp BSPC,    RT1 RT2,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        COMBO(cb_del,       &kp DEL,     RT2 RT3,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        COMBO(cb_plus,      &kp PLUS,    RT1 RM1,     DEF NUM, COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_star,      &kp STAR,    RT2 RM2,     DEF NUM, COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_amps,      &kp AMPS,    RT3 RM3,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_fslh,      &kp FSLH,    RM2 RB2,     DEF NUM, COMBO_TERM_FAST, COMBO_RPI_SLOW)
        COMBO(cb_pipe,      &kp PIPE,    RM3 RB3,  DEF NAV NUM,      COMBO_TERM_FAST, COMBO_RPI_SLOW)

        COMBO(cb_paste,         &kp LG(V),       LB2 LB1,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_FAST)
        COMBO(cb_copy_cut,         &td_copy_cut,       LB3 LB2,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_FAST)
        COMBO(cb_mse,         &mo MSE,          LT2 LT1,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_FAST)
        COMBO(cb_gresc,     &gresc,        LT3 LT2,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_FAST)
        COMBO(cb_tab,       &kp TAB,        LM3 LM2,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        // COMBO(cb_ret,       &kp RET,        LM2 LM1,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)

        // COMBO(cb_int,       &sl INT,        LT3 LT2 LT1,  DEF NAV NUM,      COMBO_TERM_SLOW, COMBO_RPI_MID)

        // COMBO(cb_qe,        &qexcl,         RB2 RB3,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_FAST)
        // COMBO(cb_qe,        &qexcl,         RB2 RB3,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_FAST)
        COMBO(cb_minus,     &kp MINUS,   RM1 RB1,     DEF NUM, COMBO_TERM_FAST, COMBO_RPI_SLOW)


        COMBO(cb_lbkt,      &kp LBKT,          RB1 RB2,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        COMBO(cb_rbkt,      &kp RBKT,          RB2 RB3,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        COMBO(cb_lpar_lt,   &mm_lpar_lt,     RM1 RM2,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        COMBO(cb_rpar_gt,   &mm_rpar_gt,     RM2 RM3,  DEF NAV NUM,      COMBO_TERM_MID,  COMBO_RPI_SLOW)
        // COMBO(cb_par,       &mm_par_bkt,       RM1 RM2 RM3,  DEF NAV NUM,      COMBO_TERM_SLOW, COMBO_RPI_SLOW)
        // COMBO(cb_brc,       &mm_brc_lgt,       RB1 RB2 RB3,  DEF NAV NUM,      COMBO_TERM_SLOW, COMBO_RPI_SLOW)

        COMBO(cb_cw,        &caps_word,     LM1 RM1,  DEF NAV NUM,      COMBO_TERM_SLOW, COMBO_RPI_SLOW)
        COMBO(cb_bl,        &bootloader,    LM4 RM4,     FUN,     COMBO_TERM_SLOW, COMBO_RPI_SLOW)
        COMBO(cb_su,        &studio_unlock, LT0 RT0,     FUN,     COMBO_TERM_SLOW, COMBO_RPI_SLOW)
        // COMBO(cb_f11,       &kp F11,        LT0 LM0,     FUN,     COMBO_TERM_MID,  COMBO_RPI_SLOW)

        // COMBO(cb_undo,      &kp X_UNDO,      LB3 LB2,     NAV,     COMBO_TERM_MID,  COMBO_RPI_MID)
        // COMBO(cb_redo,      &kp X_REDO,      LB2 LB1,     NAV,     COMBO_TERM_MID,  COMBO_RPI_MID)

        // COMBO(cb_mute,      &kp C_MUTE,     LT3 LT2,     NUM,     COMBO_TERM_MID,  COMBO_RPI_SLOW)
    };
};
