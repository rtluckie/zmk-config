/*
*
* Copyright (c) 2025 Ryan Luckie
* SPDX-License-Identifier: MIT
*
*/

/ {
    shortcuts {
        
        // Vim

        MACRO(mc_o_esc,                  &macro_tap &kp O &kp ESC)
        MACRO(mc_sft_o_esc,              &macro_tap &kp LS(O) &kp ESC)

        // Shortcuts

        MACRO(mc_meh_b,                  &macro_tap &kp LC(LA(LS(B))))
        MACRO(mc_meh_m,                  &macro_tap &kp LC(LA(LS(M))))
        MACRO(mc_meh_g,                  &macro_tap &kp LC(LA(LS(G))))
        MACRO(mc_meh_l,                  &macro_tap &kp LC(LA(LS(L))))
        MACRO(mc_meh_o,                  &macro_tap &kp LC(LA(LS(O))))
        MACRO(mc_meh_u,                  &macro_tap &kp LC(LA(LS(U))))
        MACRO(mc_meh_n,                  &macro_tap &kp LC(LA(LS(N))))
        MACRO(mc_meh_s,                  &macro_tap &kp LC(LA(LS(S))))
        MACRO(mc_meh_t,                  &macro_tap &kp LC(LA(LS(T))))
        MACRO(mc_meh_r,                  &macro_tap &kp LC(LA(LS(R))))
        MACRO(mc_meh_a,                  &macro_tap &kp LC(LA(LS(A))))
        MACRO(mc_meh_e,                  &macro_tap &kp LC(LA(LS(E))))
        MACRO(mc_meh_f,                  &macro_tap &kp LC(LA(LS(F))))
        MODTAP_TP(mt_meh_f,              &mc_meh_f)
        MACRO(mc_meh_c,                  &macro_tap &kp LC(LA(LS(C))))
        MODTAP_TP(mt_meh_c,              &mc_meh_c)
        MACRO(mc_meh_p,                  &macro_tap &kp LC(LA(LS(P))))
        MODTAP_TP(mt_meh_p,              &mc_meh_p)
        MACRO(mc_meh_h,                  &macro_tap &kp LC(LA(LS(H))))
        MODTAP_TP(mt_meh_h,              &mc_meh_h)
        MACRO(mc_meh_w,                  &macro_tap &kp LC(LA(LS(W))))
        MACRO(mc_meh_v,                  &macro_tap &kp LC(LA(LS(V))))
        MACRO(mc_meh_z,                  &macro_tap &kp LC(LA(LS(Z))))
        MACRO(mc_meh_j,                  &macro_tap &kp LC(LA(LS(J))))
        MACRO(mc_meh_q,                  &macro_tap &kp LC(LA(LS(Q))))
        MACRO(mc_meh_k,                  &macro_tap &kp LC(LA(LS(K))))
        MACRO(mc_meh_x,                  &macro_tap &kp LC(LA(LS(X))))
        MACRO(mc_meh_y,                  &macro_tap &kp LC(LA(LS(Y))))
        MACRO(mc_meh_d,                  &macro_tap &kp LC(LA(LS(D))))
        MACRO(mc_meh_i,                  &macro_tap &kp LC(LA(LS(I))))

        LAYERTAP_TP(lt_plain1,           &tc_smart_plain1)

        // Navigation

        MACRO(mc_up_end_del,             &macro_tap &kp UP &kp END &kp DEL)
        MACRO(mc_down_end,               &macro_tap &kp DOWN &kp END)

        // Meh and Hyper

        MOD_MORPH_KM(mm_comma_meh, MOD_LSFT, &mc_meh_comma, &mc_comma)
        MOD_MORPH_KM(mm_comma_meh_lctl, MOD_LCTL, &mm_comma_meh, &mc_comma)
        MOD_MORPH_KM(mm_comma_meh_lalt, MOD_LALT, &mm_comma_meh_lctl, &mc_comma)

        MOD_MORPH_KM(mm_dot_meh, MOD_LSFT, &mc_meh_dot, &mc_dot)
        MOD_MORPH_KM(mm_dot_meh_lctl, MOD_LCTL, &mm_dot_meh, &mc_dot)
        MOD_MORPH_KM(mm_dot_meh_lalt, MOD_LALT, &mm_dot_meh_lctl, &mc_dot)

        MACRO(mc_meh_space,             &kp LS(LC(LA(SPACE))))
        MACRO(mc_hyper_space,           &kp LS(LC(LA(LG(SPACE)))))
        TAPHOLD_TP(th_hyper_space,      &mc_hyper_space, &mc_hyper)

        LAYERTAP_TP(lt_cam,             &mc_cam)
        
        MACRO(mc_right,                 &kp RIGHT)
        LAYERTAP_TP(lt_right,           &mc_right)

        mc_meh: mc_meh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_press &kp LS(LC(LALT)) &macro_pause_for_release &macro_release &kp LS(LC(LALT))>;
        };

        mc_hyper: mc_hyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_press &kp LS(LC(LA(LGUI))) &macro_pause_for_release &macro_release &kp LS(LC(LA(LGUI)))>;
        };

        MACRO(mc_end_ent,         &kp END &kp ENTER)

        // Vim home home

        MACRO(mc_spc_esc,         &kp J &macro_press &kp SPACE &macro_pause_for_release &macro_release &kp SPACE &macro_tap &kp ESC)
        MACRO(mc_dqt0p,           &kp DQT &kp N0 &kp P)
        MACRO(mc_dqtplusp,        &kp DQT &kp PLUS &kp P)
        MACRO(mc_dqtplusy,        &kp DQT &kp PLUS &kp Y)
        MACRO(mc_vim_replace,     &kp COLON &kp PERCENT &kp S &kp SLASH)

        mc_caret: mc_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp CARET &kp SPACE>;
        };

        mc_zero: mc_zero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp N0>;
        };

        vim_home: vim_home {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&mc_caret>;

            ADAPTIVE(caret_zero, &mc_zero, SPACE)
        };

        TAPHOLD_TP(th_caret_z, &vim_home, &mc_zero)

        MACRO(mc_leader, &leader &to ALPHA1)
        SHIFT_MORPH(mm_leader, &mo SHORTS, &mc_leader)
        MACRO(mc_i, &kp I)
        TAPHOLD_TP(th_lead, &mc_i, &mm_leader)

#ifdef MACOS
        MACRO(mc_os,                     &macro_tap &kp M)
        
        // Common

        MACRO(mc_fullscr,                &macro_tap &kp LC(LG(F)))
        MACRO(mc_find,                   &macro_tap &kp LG(F))
        MACRO(mc_selall,                 &macro_tap &kp LG(A))
        MACRO(mc_undo,                   &macro_tap &kp LG(Z))
        MACRO(mc_copy,                   &macro_tap &kp LG(C))
        MACRO(mc_selcopy,                &macro_tap &kp LG(A) &kp LG(C))
        MACRO(mc_paste,                  &macro_tap &kp LG(V))
        MACRO(mc_selpaste,               &macro_tap &kp LG(A) &kp LG(V))
        MACRO(mc_save,                   &macro_tap &kp LG(S))
        MACRO(mc_save_esc,               &macro_tap &kp LG(S) &kp ESC)

        // Custom

        MACRO(mc_lock,                   &macro_tap &kp LC(LG(Q)))

        MACRO(mc_refresh,                &macro_tap &kp LG(R))
        MACRO(mc_close,                  &macro_tap &kp LG(W))
        MACRO(mc_reopen,                 &macro_tap &kp LG(LS(T)))

        MACRO(mc_zoom_out,               &macro_tap &kp LG(MINUS))
        MACRO(mc_zoom_in,                &macro_tap &kp LG(PLUS))
        MACRO(mc_reset_zoom,             &macro_tap &kp LG(N0))

        MACRO(mc_swapper,                &macro_tap &kp LA(TAB))
        MACRO(mc_launcher,               &macro_tap &kp LA(SPACE))
        MACRO(mc_tabs,                   &macro_tap &kp LG(LS(A)))

        MACRO(mc_files,                   &macro_tap &kp LC(LA(F)))

        MACRO(mc_hand,                   &macro_tap &kp LC(LA(H)))
        MACRO(mc_mic,                    &macro_tap &kp LC(LA(D)))
        MACRO(mc_cam,                    &macro_tap &kp LC(LA(E)))
        MACRO(mc_screenshot,             &macro_tap &kp LC(LA(S)))
        MACRO(mc_emoji,                  &macro_tap &kp LC(LA(J)))

        // Navigation

        MACRO(mc_prev_word,              &macro_tap &kp LA(LEFT))
        MACRO(mc_next_word,              &macro_tap &kp LA(RIGHT))
        MACRO(mc_del_word,               &macro_press &kp LA(DELETE) &macro_pause_for_release &macro_release &kp LA(DELETE))
        MACRO(mc_bsp_word,               &macro_press &kp LA(BACKSPACE) &macro_pause_for_release &macro_release &kp LA(BACKSPACE))

        // Meh and Hyper

        MACRO(mc_meh_comma,              &macro_tap &kp LC(LA(LS(SQT))))
        MODTAP_TP(mt_meh_comm,           &mc_meh_comma)
        MACRO(mc_meh_dot,                &macro_tap &kp LC(LA(LS(BACKSLASH))))
        MODTAP_TP(mt_meh_dot,            &mc_meh_dot)
#endif


#ifdef LINUX
      MACRO(mc_os,                     &macro_tap &kp L)
        
        // Common

        MACRO(mc_fullscr,                &macro_tap &kp F11)
        MACRO(mc_find,                    &macro_tap &kp LC(F))
        MACRO(mc_selall,                 &macro_tap &kp LC(A))
        MACRO(mc_undo,                   &macro_tap &kp LC(Z))
        MACRO(mc_copy,                   &macro_tap &kp LC(C))
        MACRO(mc_selcopy,                &macro_tap &kp LC(A) &kp LC(C))
        MACRO(mc_paste,                  &macro_tap &kp LC(V))
        MACRO(mc_selpaste,               &macro_tap &kp LC(A) &kp LC(V))
        MACRO(mc_save,                   &macro_tap &kp LC(S))
        MACRO(mc_save_esc,               &macro_tap &kp LC(S) &kp ESC)

        // Custom

        MACRO(mc_lock,                   &macro_tap &kp LG(L))

        MACRO(mc_refresh,                &macro_tap &kp F5)
        MACRO(mc_close,                  &macro_tap &kp LC(W))
        MACRO(mc_reopen,                 &macro_tap &kp LC(LS(T)))

        MACRO(mc_zoom_out,               &macro_tap &kp LC(MINUS))
        MACRO(mc_zoom_in,                &macro_tap &kp LC(PLUS))
        MACRO(mc_reset_zoom,             &macro_tap &kp LC(N0))

        MACRO(mc_swapper,                &macro_tap &kp LA(TAB))
        MACRO(mc_launcher,               &macro_tap &kp LA(SPACE))
        MACRO(mc_tabs,                   &macro_tap &kp LC(LS(A)))

        MACRO(mc_files,                   &macro_tap &kp LG(E))

        MACRO(mc_hand,                   &macro_tap &kp LC(LA(H)))
        MACRO(mc_mic,                    &macro_tap &kp LC(LA(D)))
        MACRO(mc_cam,                    &macro_tap &kp LC(LA(E)))
        MACRO(mc_screenshot,             &macro_tap &kp LC(LA(S)))
        MACRO(mc_emoji,                  &macro_tap &kp LC(LA(J)))

        // Navigation

        MACRO(mc_prev_word,              &macro_tap &kp LC(LEFT))
        MACRO(mc_next_word,              &macro_tap &kp LC(RIGHT))
        MACRO(mc_del_word,               &macro_press &kp LC(DELETE) &macro_pause_for_release &macro_release &kp LC(DELETE))
        MACRO(mc_bsp_word,               &macro_press &kp LC(BACKSPACE) &macro_pause_for_release &macro_release &kp LC(BACKSPACE))

        // Meh and Hyper

        MACRO(mc_meh_comma,              &macro_tap &kp LC(LA(LS(COMMA))))
        MODTAP_TP(mt_meh_comm,           &mc_meh_comma)
        MACRO(mc_meh_dot,                &macro_tap &kp LC(LA(LS(DOT))))
        MODTAP_TP(mt_meh_dot,            &mc_meh_dot)
#endif

   };
};
